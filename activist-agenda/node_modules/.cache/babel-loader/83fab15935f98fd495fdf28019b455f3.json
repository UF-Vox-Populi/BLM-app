{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xavier\\\\Documents\\\\GitHub\\\\BLM-app\\\\activist-agenda\\\\src\\\\components\\\\Login.js\";\n\n/* \r\n  Login Page Component\r\n  Created by Laurence Mullen\r\n  Based upon Material-UI Template from https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sign-in\r\n */\nimport React, { useState, Component } from 'react'; //improt material ui components\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container'; //import Redirect\n\nimport { Redirect } from 'react-router-dom'; //import cookies\n\nimport Cookies from 'universal-cookie';\n\nvar calls = require('../serverCalls'); // Made using Material-UI SignIn Template\n\n\nfunction Copyright() {\n  return /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, 'Copyright Â© ', /*#__PURE__*/React.createElement(Link, {\n    color: \"inherit\",\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Vox-Populi\"), ' ', new Date().getFullYear(), '.');\n} //Styling\n\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.info.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n})); //Function to return props/data on form submit\n\nexport default function SignIn(props) {\n  //use theme styling\n  const classes = useStyles();\n  const btn_text_options = ['Sign In', 'Success! Signing in...', 'Incorrect Email or Password. Try Again.']; //stores states for button color and text\n\n  const [btn_color, setbtnColor] = useState('');\n  const [btn_text, setbtnText] = useState(btn_text_options[0]); //states for detecting empty fields\n\n  const [user_error, setUserErr] = useState(false);\n  const [pass_error, setPassErr] = useState(false);\n  const [remember, updateRemember] = useState(false); //allows theme to be accessed inline\n\n  const theme = useTheme(); //stores entered user information\n\n  const [user, updateUser] = useState({\n    username: '',\n    password: ''\n  });\n\n  function resetBtn() {\n    if (btn_text !== btn_text_options[0]) {\n      setbtnColor(theme.palette.primary.main);\n      setbtnText(btn_text_options[0]);\n    }\n  } //creates cookie object\n\n\n  const userCookie = new Cookies(); //Handlers\n\n  const handleUsername = event => {\n    updateUser({\n      username: event.target.value,\n      password: user.password\n    }); //reset button\n\n    resetBtn();\n    if (user_error) setUserErr(false);\n  };\n\n  const handlePassword = event => {\n    updateUser({\n      username: user.username,\n      password: event.target.value\n    });\n    resetBtn();\n    if (pass_error) setPassErr(false);\n  };\n\n  const handleRemember = event => {\n    //toggle remember state\n    updateRemember(!remember);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); //check if fields are empty\n\n    if (user.username === '' ? setUserErr(true) : setUserErr(false)) ;\n    if (user.password === '' ? setPassErr(true) : setPassErr(false)) ; //if fields are not empty\n\n    if (!user_error && !pass_error) {\n      //check database for matching email/pass\n      calls.checkUser(user.username, user.password).then(out => {\n        //if exists and matches\n        if (out) {\n          //set logged in, get user id to store in cookie\n          calls.getUserIDbyEmail(user.username).then(id => {\n            //if remember is true, then the cookie will be kept for 7 days, otherwise only the session. Will be replaced if another user signs in\n            if (remember) userCookie.set('authedUser', id, {\n              path: '/',\n              sameSite: 'strict',\n              secure: true,\n              maxAge: 604800\n            });else userCookie.set('authedUser', id, {\n              path: '/',\n              sameSite: 'strict',\n              secure: true\n            });\n          }); //set button styling\n\n          setbtnColor(theme.palette.success.main);\n          setbtnText(btn_text_options[1]); //redirect to home page\n\n          return /*#__PURE__*/React.createElement(Redirect, {\n            to: \"/\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 18\n            }\n          });\n        } else {\n          //incorrect login info, set button styling to error\n          setbtnColor(theme.palette.error.main);\n          setbtnText(btn_text_options[2]);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    autoFocus: true,\n    error: user_error,\n    onChange: handleUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    error: pass_error,\n    autoComplete: \"current-password\",\n    onChange: handlePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"remember\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 22\n      }\n    }),\n    label: \"Remember me\",\n    onChange: handleRemember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      backgroundColor: btn_color\n    },\n    className: classes.submit,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, btn_text), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"#\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, \"Forgot password?\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: \"/signup/\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, \"Don't have an account? Sign Up\"))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Copyright, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Xavier/Documents/GitHub/BLM-app/activist-agenda/src/components/Login.js"],"names":["React","useState","Component","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","useTheme","makeStyles","Container","Redirect","Cookies","calls","require","Copyright","Date","getFullYear","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","info","main","form","width","submit","SignIn","props","classes","btn_text_options","btn_color","setbtnColor","btn_text","setbtnText","user_error","setUserErr","pass_error","setPassErr","remember","updateRemember","user","updateUser","username","password","resetBtn","primary","userCookie","handleUsername","event","target","value","handlePassword","handleRemember","handleSubmit","preventDefault","checkUser","then","out","getUserIDbyEmail","id","set","path","sameSite","secure","maxAge","success","error"],"mappings":"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","sourcesContent":["/* \r\n  Login Page Component\r\n  Created by Laurence Mullen\r\n  Based upon Material-UI Template from https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/templates/sign-in\r\n */\r\n\r\nimport React, { useState, Component } from 'react';\r\n//improt material ui components\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n//import Redirect\r\nimport {Redirect} from 'react-router-dom';\r\n//import cookies\r\nimport Cookies from 'universal-cookie';\r\n\r\nvar calls = require('../serverCalls');\r\n\r\n// Made using Material-UI SignIn Template\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Vox-Populi\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n//Styling\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.info.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\n//Function to return props/data on form submit\r\n\r\nexport default function SignIn(props) {\r\n  \r\n  //use theme styling\r\n  const classes = useStyles();\r\n  \r\n  const btn_text_options = ['Sign In', 'Success! Signing in...', 'Incorrect Email or Password. Try Again.'];\r\n  \r\n  //stores states for button color and text\r\n  const [btn_color, setbtnColor] = useState('');\r\n  const [btn_text, setbtnText] = useState(btn_text_options[0]);\r\n\r\n  //states for detecting empty fields\r\n  const [user_error, setUserErr] = useState(false);\r\n  const [pass_error, setPassErr] = useState(false);\r\n  \r\n  const [remember, updateRemember] = useState(false);\r\n  //allows theme to be accessed inline\r\n  const theme = useTheme();\r\n\r\n  //stores entered user information\r\n  const [user, updateUser] = useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n\r\n  function resetBtn() {\r\n    if (btn_text !== btn_text_options[0]) {\r\n      setbtnColor(theme.palette.primary.main);\r\n      setbtnText(btn_text_options[0]);\r\n    }\r\n  }\r\n  \r\n  //creates cookie object\r\n  const userCookie = new Cookies();\r\n\r\n  //Handlers\r\n  const handleUsername = (event) => {\r\n    updateUser({\r\n      username: event.target.value,\r\n      password: user.password});\r\n    //reset button\r\n    resetBtn();\r\n    if (user_error) setUserErr(false);\r\n  }\r\n  const handlePassword = (event) => {\r\n    updateUser({\r\n      username: user.username,\r\n      password: event.target.value});\r\n    resetBtn();\r\n    if (pass_error) setPassErr(false);\r\n  }\r\n  const handleRemember = (event) => {\r\n    //toggle remember state\r\n    updateRemember(!remember);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    \r\n    //check if fields are empty\r\n    if (user.username === '' ? setUserErr(true) : setUserErr(false));\r\n    if (user.password === '' ? setPassErr(true) : setPassErr(false));\r\n    \r\n    //if fields are not empty\r\n    if (!user_error && !pass_error) {\r\n      //check database for matching email/pass\r\n      calls.checkUser(user.username, user.password).then(out => {\r\n        //if exists and matches\r\n        if (out) {\r\n          //set logged in, get user id to store in cookie\r\n          calls.getUserIDbyEmail(user.username).then(id => {\r\n            //if remember is true, then the cookie will be kept for 7 days, otherwise only the session. Will be replaced if another user signs in\r\n            if (remember)\r\n              userCookie.set('authedUser', id, { path: '/', sameSite: 'strict', secure: true, maxAge: 604800});\r\n            else \r\n              userCookie.set('authedUser', id, { path: '/', sameSite: 'strict', secure: true});\r\n          })\r\n\r\n          //set button styling\r\n          setbtnColor(theme.palette.success.main);\r\n          setbtnText(btn_text_options[1]);\r\n          //redirect to home page\r\n          return <Redirect to=\"/\" />\r\n        }\r\n        else {\r\n          //incorrect login info, set button styling to error\r\n          setbtnColor(theme.palette.error.main);\r\n          setbtnText(btn_text_options[2]);\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography color=\"textPrimary\" component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            error={user_error}\r\n            onChange={handleUsername}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            error={pass_error}\r\n            autoComplete=\"current-password\"\r\n            onChange={handlePassword}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n            onChange={handleRemember}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{backgroundColor: btn_color}}\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            {btn_text}\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/signup/\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}